var http = require('http');
var fs = require('fs');
var url = require('url');
var axios = require('axios');

function genFilmes(dados) {
    filmes = dados
    pagHtml = `<!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8">
            <title>Lista de Filmes</title>
            <link rel="stylesheet" href="/w3.css"/>
            <link rel="stylesheet" href="style2.css"/>
        </head>
        <body>
            <div class="w3-card-4">
    
                <header class="w3-container w3-blue">
                  <h1>Lista de Filmes</h1>
                </header>
                
                <div class="w3-container">
                    <table class="w3-table w3-striped w3-bordered">
                        <tr>
                            <th>Titulo</th>
                            <th>Ano</th>
                        </tr>
    `
    filmes.forEach(ocorr => {
        pagHtml += `
                            <tr>
                                <td><a href = '/filmes/${ocorr._id.$oid}'>${ocorr.title}</a></td>
                                <td>${ocorr.year}</td>
                            </tr>
    `
    });

    pagHtml += `
                    </table>
                    </div>

                    <footer class="w3-container w3-blue">
                      <h5>Generated by EngWeb2024</h5>
                    </footer>

                </div>
        </body>
    </html>
    `
    return pagHtml
}


function genFilme_id (id_filme, dados){
    var filme = dados.find(f => f._id.$oid == id_filme)
    if (!filme) {
        console.log(`No film found with id ${id_filme}`)
        return
    }
    pagHtml = `<!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8">
            <title>${filme.title}</title>
            <link rel="stylesheet" href="style4.css"/>
        </head>
        <body>
            <div class="card">
                <div class="header">
                    <h1>${filme.title}</h1>
                </div>
                <div class="content">
                    <div>
                        <h3>Title</h3>
                        <p>${filme.title}</p>
                    </div>
                    <div>
                        <h3>Year</h3>
                        <p>${filme.year}</p>
                    </div>
                    <div>
                        <h3>Cast</h3>
                        <p>${filme.cast}</p>
                    </div>
                    <div>
                        <h3>Genre</h3>
                        <p>${filme.genres}</p>
                    </div>
                </div>
                <div class="footer">
                    <h5>Generated by EngWeb2024</h5>
                </div>
            </div>
        </body>
    </html>
    `
    return pagHtml
}

function genGeneros(dados) {
    generos = dados
    pagHtml = `<!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8">
            <title>Lista de Género</title>
            <link rel="stylesheet" href="/w3.css"/>
            <link rel="stylesheet" href="style3.css"/>
        </head>
        <body>
            <div class="w3-card-4">
    
                <header class="w3-container w3-blue">
                  <h1>Lista de Géneros</h1>
                </header>
                
                <div class="w3-container">
                    <ul class="w3-ul w3-card-4" style="width:50%">
                        `
    
    
    
    
    generos.forEach(ocorr => {
        
        pagHtml += `
                    <li><a href = '/generos/${ocorr.id}'>${ocorr.genre}</a></li>
        `
        
    });

    pagHtml += `
                    </ul>
                    </div>

                    <footer class="w3-container w3-blue">
                      <h5>Generated by EngWeb2024</h5>
                    </footer>

                </div>
        </body>
    </html>
    `

    return pagHtml
}

function genGenero_id (id_genero, dados_g, dados_f){
    var genero = dados_g.find(f => f.id == id_genero)
    if (!genero) {
        console.log(`No genre found with id ${id_genero}`)
        return
    }
    pagHtml = `<!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8">
            <title>${genero.genre}</title>
            <link rel="stylesheet" href="/w3.css"/>
        </head>
        <body>
            <div class="w3-card-4">
    
                <header class="w3-container w3-blue">
                  <h1>Lista de Filmes do género ${genero.genre}</h1>
                </header>
                
                <div class="w3-container">
                    <ul class="w3-ul w3-card-4" style="width:50%">
                        `
    
    if (genero.Filmes) {
        genero.Filmes.forEach(ocorr => {
            var filme = dados_f.find(f => f._id.$oid == ocorr)
            pagHtml += `
                        <li><a href = '/filmes/${ocorr}'>${filme.title}</a></li>
            `
        });
    }

    pagHtml += `
                    </ul>
                    </div>

                    <footer class="w3-container w3-blue">
                      <h5>Generated by EngWeb2024</h5>
                    </footer>

                </div>
        </body>
    </html>
    `

    return pagHtml

}


function genAtores(dados) {
    cast = dados
    pagHtml = `<!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8">
            <title>Lista de Atores</title>
            <link rel="stylesheet" href="/w3.css"/>
            <link rel="stylesheet" href="style3.css">
        </head>
        <body>
            <div class="w3-card-4">
    
                <header class="w3-container w3-blue">
                  <h1>Lista de Autores</h1>
                </header>
                
                <div class="w3-container">
                    <ul class="w3-ul w3-card-4" style="width:50%">
                        `
    
    
    
    
    cast.forEach(ocorr => {
        pagHtml += `
                    <li><a href = '/atores/${ocorr.id}'>${ocorr.Nome}</a></li>
        `
        
    });

    pagHtml += `
                    </ul>
                    </div>

                    <footer class="w3-container w3-blue">
                      <h5>Generated by EngWeb2024</h5>
                    </footer>

                </div>
        </body>
    </html>
    `

    return pagHtml
}


function genAtor_id (id_ator, dados_a, dados_f){
    var ator = dados_a.find(f => f.id == id_ator)
    if (!ator) {
        console.log(`No actor found with id ${id_ator}`)
        return
    }
    pagHtml = `<!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8">
            <title>${ator.Nome}</title>
            <link rel="stylesheet" href="/w3.css"/>
        </head>
        <body>
            <div class="w3-card-4">
    
                <header class="w3-container w3-blue">
                  <h1>Filmes em que ${ator.Nome} participou</h1>
                </header>
                
                <div class="w3-container">
                    <table class="w3-table w3-striped w3-bordered">
                        <tr>
                            <th>Nome</th>
                            <th>Genero</th>
                        </tr>
                   `

    if (ator.Filmes) {
        ator.Filmes.forEach(ocorr => {
            var filme = dados_f.find(f => f._id.$oid == ocorr)
            pagHtml += `
                        <tr>
                            <td><a href = '/filmes/${ocorr}'>${filme.title}</a></td>
                            <td>${filme.genres}</td>
                        </tr>
                    `
        });
    }

    pagHtml += `
                    </table>
                    </div>
                    <footer class="w3-container w3-blue">
                        <h5>Generated by EngWeb2024</h5>
                    </footer>
            </div>
        </body>
</html>
`
    
    return pagHtml
}




http.createServer(function (req, res) {
    var id_filmexp = /\/filmes\/\w+$/
    var id_generoexp = /\/generos\/\w+$/
    var id_atorexp = /\/atores\/\w+$/
    var q = url.parse(req.url, true)
    if(q.pathname == '/') {
        fs.readFile('Pagina_inicial.html', function(erro, data) {
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(data)
            res.end()
        })
    }
    else if(q.pathname == '/filmes') {
        // Pagina com a lista de filmes
        axios.get('http://localhost:3000/filmes')
        .then(function(response) {
            dados = response.data
            pagHtml = genFilmes(dados)
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(pagHtml)
            res.end()
        })
        .catch(function(error) {
            console.log(error)
        })
    }
    else if(id_filmexp.test(q.pathname)) {
        // Pagina com a informação de um filme
        console.log('q.pathname: ' + q.pathname)
        var id_filme = q.pathname.substring(8)
        console.log('id_filme: ' + id_filme)
        axios.get('http://localhost:3000/filmes/')
            .then(function(response) {
                dados = response.data
                pagHtml = genFilme_id(id_filme, dados)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHtml)
                res.end()
            })
            .catch(function(error) {
                console.log(error)
            })
    }
    else if(q.pathname == '/generos') {
        // Pagina com a lista de generos
        axios.get('http://localhost:3000/genres')
        .then(function(response) {
            dados = response.data
            pagHtml = genGeneros(dados)
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(pagHtml)
            res.end()
        })
        .catch(function(error) {
            console.log(error)
        })
    }
    else if(id_generoexp.test(q.pathname)) {
        // Pagina com a informação de um genero
        var id_genero = q.pathname.substring(9)
        axios.get('http://localhost:3000/genres/')
            .then(function(response) {
                dados_g = response.data
                axios.get('http://localhost:3000/filmes/')
                    .then(function(response) {
                        dados_f = response.data
                        pagHtml = genGenero_id(id_genero, dados_g, dados_f)
                        res.writeHead(200, {'Content-Type': 'text/html'})
                        res.write(pagHtml)
                        res.end()
                    })
                    .catch(function(error) {
                        console.log(error)
                    })
            })
            .catch(function(error) {
                console.log(error)
            })
    }
    else if (q.pathname == '/atores') {
        // Pagina com a lista de atores
        axios.get('http://localhost:3000/cast')
        .then(function(response) {
            dados = response.data
            pagHtml = genAtores(dados)
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(pagHtml)
            res.end()
        })
        .catch(function(error) {
            console.log(error)
        })
    }
    else if(id_atorexp.test(q.pathname)) {
        // Pagina com a informação de um ator
        var id_ator = q.pathname.substring(8)
        axios.get('http://localhost:3000/cast/')
            .then(function(response) {
                dados_a = response.data
                axios.get('http://localhost:3000/filmes/')
                    .then(function(response) {
                        dados_f = response.data
                        pagHtml = genAtor_id(id_ator, dados_a, dados_f)
                        res.writeHead(200, {'Content-Type': 'text/html'})
                        res.write(pagHtml)
                        res.end()
                    })
                    .catch(function(error) {
                        console.log(error)
                    })
            })
            .catch(function(error) {
                console.log(error)
            })
    }
    else if(q.pathname == '/w3.css') {
        fs.readFile('w3.css', function(erro, data) {
            res.writeHead(200, {'Content-Type': 'text/css'})
            res.write(data)
            res.end()
        })
    }
    else if(q.pathname == '/style.css') {
        fs.readFile('style.css', function(erro, data) {
            res.writeHead(200, {'Content-Type': 'text/css'})
            res.write(data)
            res.end()
        })
    }
    else if(q.pathname == '/style2.css') {
        fs.readFile('style2.css', function(erro, data) {
            res.writeHead(200, {'Content-Type': 'text/css'})
            res.write(data)
            res.end()
        })
    }
    else if(q.pathname == '/style3.css') {
        fs.readFile('style3.css', function(erro, data) {
            res.writeHead(200, {'Content-Type': 'text/css'})
            res.write(data)
            res.end()
        })
    }
    else if(q.pathname == '/filmes/style4.css') {
        fs.readFile('style4.css', function(erro, data) {
            res.writeHead(200, {'Content-Type': 'text/css'})
            res.write(data)
            res.end()
        })
    }
    else {
        res.writeHead(400, {'Content-Type': 'text/html; charset=utf-8'})
        res.write('<p>Pedido não suportado.</p>')
        res.write('<pre>' + q.pathname + '</pre>')
        res.end()
    }
    console.log(q.pathname)
}).listen(1111)